=============================
CUSTOMIZANDO O PROMPT DO BASH
=============================
Podemos customizar a mensagem do prompt de comando como quisermos
Para isso devemos usar os seguintes comandos abaixo:

-------------------------------
VERIFICANDO O FORMATO DO PROMPT
-------------------------------

-> COMANDO PARA VERIFICAR A SAIDA DO PROMPT
   -> $ echo $PS1
        -> # PS1 é o prompt natural do sistema
        -> # tipo de saida: \u@\h \W \$

------------------------------
CÓDIGOS PARA COLOCAR NO PROMPT
------------------------------
Existem códigos que podemos usar para tornar o Shell mais eficiente

-> \d : apresenta a data (Weekday Month Date)
-> \h : apresenta o nome do dono do sistema(hostname)
-> \t : o horário atual em formato de 24h (HH:MM:SS)
-> \u : apresenta o nome do Usuário atual
-> \w : apresenta o diretório atual(pasta home abreviada com ~)
-> \[ e \] : o inicio e o fim de uma área de não impressão


--------------------------------
MODIFICANDO O FORMATO DO PROMPT 
--------------------------------
É muito simples alterar o prompt

-> $ PS1="comandosdesejados"

-> exemplo: PS1="[\u@\h \W]\$ "

-----------------------------
ALTERANDO AS CORES DO PROMPT
------------------------------
Iremos utilizar a paleta de cores do setaf
Se deseja mais informações,procure a paleta no google

-> CORES PRINCIPAIS:
   -> 0 : preto
   -> 1 : vermelho
   -> 2 : verde
   -> 3 : laranja
   -> 4 : azul
   -> 5 : magenta
   -> 6 : ciano
   -> 7 : branco
   -> 11: amarelo
   -> 12: roxo
   -> 208: rosa

-> COMO ATIVAR AS CORES:
   -> $ tput setaf numerocor
   -> ex: tput setaf 1

-> ALTERANDO AS CORES DO PROMPT:
   -> #Entramos no arquivo .bashrc 
   -> sudo nano ~/.bashrc
   
   -> #criamos as confiigurações de cores
   -> COR="\[$(comandodacor)\]"
   -> ex: RED="\[$(tput setaf 1)\]"

   -> #criamos a configuração de reset
   -> RESET="\[$(tput sgr0)\]"

   -> #adicionamos as cores no prompt PS1
   -> PS1='[${RED}\u${RESET}@${GREEN}\h${RESET} ${BLUE}\W${RESET}]'

   

----------------------------------------
CONFIGURANDO O GIT PARA APARECER NO BASH
----------------------------------------
Podemos colocar no prompt do bash o git

1) Tenha o Git instalado no sistema

2) Crie um diretorio chamado .bash
    -> $ mkdir ~/.bash

3) Copie o arquivo git-prompt

-> $ cp /usr/share/git/completion/git-prompt.sh ~/.bash/git-prompt.sh

4) vá até o arquivo .bashrc
   -> $ sudo nano ~/.bashrc

4) coloque no final do arquivo .bashrc:
   -> source ~/.bash/git-prompt.sh

5) Para saber as alterações no branch:
   -> export GIT_PS1_SHOWDIRTYSTATE=1
       -> # para ver as alterações na branch
   -> + : significa que foi feito um commit nao feito push
   -> * : significa que foi alterado informações na branch


6) Para iniciar o processo no Prompt:
  -> $(__git_ps1 " (%s)")


------------------------------------
CONFIGURAÇÃO FINAL DE MEU ARCH LINUX
-------------------------------------

# CONFIGURANDO AS CORES NO PROMPT
#VERMELHO
RED="$(tput setaf 1)"
#LARANJA
OR="$(tput setaf 3)"
#AMARELO
Y="$(tput setaf 11)"
#CIANO
C="$(tput setaf 6)"
#ROSA
RO="$(tput setaf 208)"
#RESETAR(USADO PARA NÃO DEIXAR SAIR AS CORES)
R="$(tput sgr0)"

#CONFIGURANDO O GIT NO BASH
source ~/.bash/git-prompt.sh
export GIT_SHOWDIRTYSTATE=1

#PROMPT COMPLETO DO BASH
PS1='[${OR}USER: \u ${Y}TIME: \t ${C}DIR: \W ${RED}$(__git_ps1 " (%s)")${R}]\n\$ '
  


